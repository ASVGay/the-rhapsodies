# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build & test project

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

env:
  SUPABASE_INTERNAL_IMAGE_REGISTRY: ghcr.io
  NEXT_PUBLIC_SUPABASE_URL: ${{secrets.NEXT_PUBLIC_SUPABASE_URL}}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY}}
  NEXT_PUBLIC_ONESIGNAL_APP_ID: ${{secrets.NEXT_PUBLIC_ONESIGNAL_APP_ID}}
  CYPRESS_OLD_EMAIL: ${{secrets.CYPRESS_OLD_EMAIL}}
  CYPRESS_OLD_PASSWORD: ${{secrets.CYPRESS_OLD_PASSWORD}}
  CYPRESS_NEW_ID: ${{secrets.CYPRESS_NEW_ID}}
  CYPRESS_NEW_EMAIL: ${{secrets.CYPRESS_NEW_EMAIL}}
  CYPRESS_NEW_PASSWORD: ${{secrets.CYPRESS_NEW_PASSWORD}}
  CYPRESS_SUGGESTION_ID: ${{secrets.CYPRESS_SUGGESTION_ID}}
  CYPRESS_USERNAME_OLD: ${{secrets.CYPRESS_USERNAME_OLD}}
  CYPRESS_BASE_URL: ${{vars.CYPRESS_BASE_URL}}
  CYPRESS_TIMEOUT_SECONDS: ${{vars.CYPRESS_TIMEOUT_SECONDS}}
  CYPRESS_RETRY_MODE_RUN: ${{vars.CYPRESS_RETRY_MODE_RUN}}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
      - name: Clean install node modules
        run: npm ci
      - name: Setup cache
        uses: actions/cache@v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Create build
        run: npm run build --if-present
      - uses: supabase/setup-cli@v1
      - name: Stop supabase (in case it is running)
        run: supabase stop
      - name: Start Supabase
        run: supabase start -x studio,imgproxy,inbucket
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          start: npm run start
          wait-on: ${{ vars.CYPRESS_BASE_URL }}
          browser: chrome
      - name: If tests failed, save Cypress screenshots
        # after the test run completes
        # store videos and any screenshots if tests failed
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          retention-days: 1
      - name: If tests failed, save Cypress videos
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos
          retention-days: 1
      - uses: supabase/setup-cli@v1
      - name: Stop Supabase
        run: supabase stop
